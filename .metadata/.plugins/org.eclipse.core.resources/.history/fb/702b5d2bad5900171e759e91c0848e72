package com.rpsoft.ws.rest.client.app;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

import org.apache.commons.lang3.StringUtils;

public class RestClientAppForXml {

	private static String HTTPS = "https";

	public static void main(String[] args) {

		String responseType = "application/json";
		String serviceUrl = "http://localhost:3020/calculator/squareRoot?input=100";
		
		responseType = "application/xml";
		serviceUrl = "http://localhost:3020/calculator/square?input=100";
		
		// HTTP Library
		try {
			httpRestClient(serviceUrl, responseType);
		} catch (Exception e) {
			e.printStackTrace();
		}

		// Jetty Client Lib
		//jettyRestClient(serviceUrl);
	}

	private static void httpRestClient(final String serviceUrl, final String responseType) throws Exception {

		URL endpointURL = null;
		endpointURL = new URL(serviceUrl);

		// prepare connection object
		if (StringUtils.startsWith(serviceUrl, HTTPS)) {

		} else {

			HttpURLConnection httpURLConnection = null;
			httpURLConnection = (HttpURLConnection) endpointURL.openConnection();

			// Set request properties
			httpURLConnection.setRequestMethod("GET");
			httpURLConnection.setRequestProperty("Accept", responseType);

			// Open connection with server

			httpURLConnection.connect();

			if (httpURLConnection.getResponseCode() != 200) {
				throw new RuntimeException("Failed : HTTP error code : " + httpURLConnection.getResponseCode());
			}

			final BufferedReader bufferedReader = new BufferedReader(
					new InputStreamReader(httpURLConnection.getInputStream()));
			
			System.out.println("Output from Server .... \n");
			String output;
			while ((output = bufferedReader.readLine()) != null) {
				System.out.println("Loop" + output);
			}
			
			httpURLConnection.disconnect();

		}

	}

	private static void jettyRestClient(final String serviceUrl) {
		// TODO Auto-generated method stub

	}
}
